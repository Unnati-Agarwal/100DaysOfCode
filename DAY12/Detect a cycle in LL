#Given head, the head of a linked list, determine if the linked list has a cycle in it. 
There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer.

class Solution {
public:
    bool hasCycle(ListNode *head) 
    {
        unordered_set<ListNode*>s;
        while(head!=NULL)
        {
            if(s.find(head)!=s.end())
                return true;
            
            s.insert(head);
            head=head->next;
            
        }
        return false;
    }
};
