class Solution{
    public:
    
    vector<string>ans;
    bool valid(int x,int y,vector<vector<int>> &m, int n)
    {
        if(x>=0 and x<n and y>=0 and y<n and m[x][y]==1)
          return true;
          
        return false;  
    }
    
    void solve(vector<vector<int>> &m, int n,int x,int y, int dx[],int dy[],string s)
    {
        if(x==n-1 and y==n-1)
        {
            ans.push_back(s);
            return ;
        }
        string d="DLRU";
        for(int i=0;i<4;i++)
        {
            int x1=x+dx[i];
            int y1=y+dy[i];
            if(valid(x1,y1,m,n))
            {
                m[x1][y1]=2;
                solve(m,n,x1,y1,dx,dy,s+d[i]);
                m[x1][y1]=1;
            }
        }
    }
    
    void path(vector<vector<int>> &m, int n)
    {
        string s="";
        int dx[]={1,0,0,-1};
        int dy[]={0,-1,1,0};
        if(m[0][0]==1)
        {
            m[0][0]=2;
            solve(m,n,0,0,dx,dy,s);
        }  
    }
    vector<string> findPath(vector<vector<int>> &m, int n) 
    {
        // Your code goes here
        path(m,n);
        return ans;
    }
};
